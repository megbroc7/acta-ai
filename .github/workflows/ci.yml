name: Acta AI CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Run backend tests
      run: |
        docker-compose -f docker-compose.test.yml up --build --exit-code-from backend-test
        
    - name: Clean up
      if: always()
      run: |
        docker-compose -f docker-compose.test.yml down -v
        
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
        pip install -r backend/requirements.txt
        
    - name: Lint with flake8
      run: |
        flake8 backend --count --select=E9,F63,F7,F82 --show-source --statistics
        
    - name: Check formatting with black
      run: |
        black --check backend
        
    - name: Check imports with isort
      run: |
        isort --check-only --profile black backend

  deploy:
    needs: [test, lint]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        
    - name: Deploy to production
      run: |
        # Deploy the application to the production server
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
          # Create app directory if it doesn't exist
          mkdir -p ~/acta-ai
          
          # Clone or pull the latest code
          if [ -d ~/acta-ai/.git ]; then
            cd ~/acta-ai && git pull
          else
            git clone https://github.com/megbroc7/acta-ai.git ~/acta-ai
          fi
          
          # Navigate to app directory
          cd ~/acta-ai
          
          # Backup existing .env file if it exists on the server
          if [ -f backend/.env ]; then
            cp backend/.env backend/.env.backup
            # Note: We use the .env file from the repository
            echo 'Backed up existing .env file'
          fi
          
          # Build and start the containers
          docker-compose down
          docker-compose up -d --build
          
          # Run database migrations
          docker-compose exec -T backend alembic upgrade head
          
          echo 'Deployment completed successfully!'
        " 